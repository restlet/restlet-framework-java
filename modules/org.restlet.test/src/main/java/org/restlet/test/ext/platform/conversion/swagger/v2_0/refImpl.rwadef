{
  "contact": {
    "name": "apiteam",
    "email": "apiteam@wordnik.com"
  },
  "contract": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger \n    at <a href=\"http://swagger.wordnik.com\">http://swagger.wordnik.com</a> or on irc.freenode.net, #swagger.  For this sample,\n    you can use the api key \"special-key\" to test the authorization filters",
    "name": "Swagger Sample App",
    "representations": [
      {
        "description": null,
        "name": "Tag",
        "extendedType": null,
        "sections": [
          "Pet"
        ],
        "properties": [
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "id",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "name",
            "enumeration": [],
            "example": "sample name",
            "uniqueItems": false,
            "type": "string"
          }
        ],
        "raw": false
      },
      {
        "description": null,
        "name": "Pet",
        "extendedType": null,
        "sections": [
          "Pet"
        ],
        "properties": [
          {
            "defaultValue": null,
            "description": "unique identifier for the pet",
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 1,
            "name": "id",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "category",
            "enumeration": [],
            "uniqueItems": false,
            "type": "Category"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 1,
            "name": "name",
            "enumeration": [],
            "example": "sample name",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": -1,
            "min": null,
            "minOccurs": 0,
            "name": "photoUrls",
            "enumeration": [],
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": -1,
            "min": null,
            "minOccurs": 0,
            "name": "tags",
            "enumeration": [],
            "uniqueItems": false,
            "type": "Tag"
          },
          {
            "defaultValue": null,
            "description": "pet status in the store",
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "status",
            "enumeration": [],
            "example": "sample status",
            "uniqueItems": false,
            "type": "string"
          }
        ],
        "raw": false
      },
      {
        "description": null,
        "name": "Category",
        "extendedType": null,
        "sections": [
          "Pet"
        ],
        "properties": [
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "id",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "name",
            "enumeration": [],
            "example": "sample name",
            "uniqueItems": false,
            "type": "string"
          }
        ],
        "raw": false
      },
      {
        "description": null,
        "name": "Order",
        "extendedType": null,
        "sections": [
          "Order"
        ],
        "properties": [
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "id",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "petId",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "quantity",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": "Order Status",
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "status",
            "enumeration": [],
            "example": "sample status",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "shipDate",
            "enumeration": [],
            "example": "sample shipDate",
            "uniqueItems": false,
            "type": "string"
          }
        ],
        "raw": false
      },
      {
        "description": null,
        "name": "User",
        "extendedType": null,
        "sections": [
          "User"
        ],
        "properties": [
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "id",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "firstName",
            "example": "sample firstName",
            "enumeration": [],
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "username",
            "enumeration": [],
            "example": "sample username",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "lastName",
            "enumeration": [],
            "example": "sample lastName",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "email",
            "enumeration": [],
            "example": "sample email",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "password",
            "enumeration": [],
            "example": "sample password",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": null,
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "phone",
            "enumeration": [],
            "example": "sample phone",
            "uniqueItems": false,
            "type": "string"
          },
          {
            "defaultValue": null,
            "description": "User Status",
            "max": null,
            "maxOccurs": 1,
            "min": null,
            "minOccurs": 0,
            "name": "userStatus",
            "enumeration": [],
            "example": "1",
            "uniqueItems": false,
            "type": "integer"
          }
        ],
        "raw": false
      }
    ],
    "resources": [
      {
        "description": null,
        "name": "PetFindByTags",
        "sections": [
          "Pet"
        ],
        "operations": [
          {
            "description": "Finds Pets by tags",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "findPetsByTags",
            "queryParameters": [
              {
                "allowMultiple": true,
                "defaultValue": null,
                "description": "Tags to filter by",
                "name": "tags",
                "enumeration": [],
                "required": true
              }
            ],
            "responses": [
              {
                "outputPayLoad": {
                  "array": true,
                  "type": "Pet"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid tag value",
                "name": "Error 400"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/pet/findByTags"
      },
      {
        "description": null,
        "name": "PetPetId",
        "sections": [
          "Pet"
        ],
        "operations": [
          {
            "description": "Find pet by ID",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "getPetById",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": {
                  "array": false,
                  "type": "Pet"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid ID supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "Pet not found",
                "name": "Error 404"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": []
          },
          {
            "description": "Deletes a pet",
            "headers": [],
            "inputPayLoad": null,
            "method": "DELETE",
            "name": "deletePet",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid pet value",
                "name": "Error 400"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": []
          },
          {
            "description": "partial updates to a pet",
            "headers": [],
            "inputPayLoad": {
              "array": false,
              "type": "Pet"
            },
            "method": "PATCH",
            "name": "partialUpdate",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": {
                  "array": true,
                  "type": "Pet"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid tag value",
                "name": "Error 400"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "description": "Updates a pet in the store with form data",
            "headers": [],
            "inputPayLoad": null,
            "method": "POST",
            "name": "updatePetWithForm",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 405,
                "description": "Invalid input",
                "name": "Error 405"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": [
              "application/x-www-form-urlencoded"
            ]
          }
        ],
        "pathVariables": [
          {
            "description": "Pet id to delete",
            "name": "petId",
            "required": true
          }
        ],
        "resourcePath": "/pet/{petId}"
      },
      {
        "description": null,
        "name": "Pet",
        "sections": [
          "Pet"
        ],
        "operations": [
          {
            "description": "Add a new pet to the store",
            "headers": [],
            "inputPayLoad": {
              "array": false,
              "type": "Pet"
            },
            "method": "POST",
            "name": "addPet",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 405,
                "description": "Invalid input",
                "name": "Error 405"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "description": "Update an existing pet",
            "headers": [],
            "inputPayLoad": {
              "array": false,
              "type": "Pet"
            },
            "method": "PUT",
            "name": "updatePet",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid ID supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "Pet not found",
                "name": "Error 404"
              },
              {
                "outputPayLoad": null,
                "code": 405,
                "description": "Validation exception",
                "name": "Error 405"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/pet"
      },
      {
        "description": null,
        "name": "PetFindByStatus",
        "sections": [
          "Pet"
        ],
        "operations": [
          {
            "description": "Finds Pets by status",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "findPetsByStatus",
            "queryParameters": [
              {
                "allowMultiple": true,
                "defaultValue": "available",
                "description": "Status values that need to be considered for filter",
                "name": "status",
                "enumeration": [
                  "available",
                  "pending",
                  "sold"
                ],
                "required": true
              }
            ],
            "responses": [
              {
                "outputPayLoad": {
                  "array": true,
                  "type": "Pet"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid status value",
                "name": "Error 400"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/pet/findByStatus"
      },
      {
        "description": null,
        "name": "PetUploadImage",
        "sections": [
          "Pet"
        ],
        "operations": [
          {
            "description": "uploads an image",
            "headers": [],
            "inputPayLoad": null,
            "method": "POST",
            "name": "uploadFile",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              }
            ],
            "produces": [
              "application/json",
              "application/xml",
              "text/plain",
              "text/html"
            ],
            "consumes": [
              "multipart/form-data"
            ]
          }
        ],
        "pathVariables": [],
        "resourcePath": "/pet/uploadImage"
      },
      {
        "description": null,
        "name": "StoreOrderOrderId",
        "sections": [
          "Order"
        ],
        "operations": [
          {
            "description": "Delete purchase order by ID",
            "headers": [],
            "inputPayLoad": null,
            "method": "DELETE",
            "name": "deleteOrder",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid ID supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "Order not found",
                "name": "Error 404"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          },
          {
            "description": "Find purchase order by ID",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "getOrderById",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": {
                  "array": false,
                  "type": "Order"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid ID supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "Order not found",
                "name": "Error 404"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [
          {
            "description": "ID of the order that needs to be deleted",
            "name": "orderId",
            "required": true
          }
        ],
        "resourcePath": "/store/order/{orderId}"
      },
      {
        "description": null,
        "name": "StoreOrder",
        "sections": [
          "Order"
        ],
        "operations": [
          {
            "description": "Place an order for a pet",
            "headers": [],
            "inputPayLoad": {
              "array": false,
              "type": "Order"
            },
            "method": "POST",
            "name": "placeOrder",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid order",
                "name": "Error 400"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/store/order"
      },
      {
        "description": null,
        "name": "User",
        "sections": [
          "User"
        ],
        "operations": [
          {
            "description": "Create user",
            "headers": [],
            "inputPayLoad": {
              "array": false,
              "type": "User"
            },
            "method": "POST",
            "name": "createUser",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/user"
      },
      {
        "description": null,
        "name": "UserCreateWithArray",
        "sections": [
          "User"
        ],
        "operations": [
          {
            "description": "Creates list of users with given input array",
            "headers": [],
            "inputPayLoad": {
              "array": true,
              "type": "User"
            },
            "method": "POST",
            "name": "createUsersWithArrayInput",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/user/createWithArray"
      },
      {
        "description": null,
        "name": "UserCreateWithList",
        "sections": [
          "User"
        ],
        "operations": [
          {
            "description": "Creates list of users with given list input",
            "headers": [],
            "inputPayLoad": {
              "array": true,
              "type": "User"
            },
            "method": "POST",
            "name": "createUsersWithListInput",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/user/createWithList"
      },
      {
        "description": null,
        "name": "UserUsername",
        "sections": [
          "User"
        ],
        "operations": [
          {
            "description": "Updated user",
            "headers": [],
            "inputPayLoad": {
              "array": false,
              "type": "User"
            },
            "method": "PUT",
            "name": "updateUser",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid username supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "User not found",
                "name": "Error 404"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          },
          {
            "description": "Delete user",
            "headers": [],
            "inputPayLoad": null,
            "method": "DELETE",
            "name": "deleteUser",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid username supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "User not found",
                "name": "Error 404"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          },
          {
            "description": "Get user by user name",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "getUserByName",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": {
                  "array": false,
                  "type": "User"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid username supplied",
                "name": "Error 400"
              },
              {
                "outputPayLoad": null,
                "code": 404,
                "description": "User not found",
                "name": "Error 404"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [
          {
            "description": "name that need to be deleted",
            "name": "username",
            "required": true
          }
        ],
        "resourcePath": "/user/{username}"
      },
      {
        "description": null,
        "name": "UserLogin",
        "sections": [
          "User"
        ],
        "operations": [
          {
            "description": "Logs user into the system",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "loginUser",
            "queryParameters": [
              {
                "allowMultiple": false,
                "defaultValue": null,
                "description": "The user name for login",
                "name": "username",
                "enumeration": [],
                "required": true
              },
              {
                "allowMultiple": false,
                "defaultValue": null,
                "description": "The password for login in clear text",
                "name": "password",
                "enumeration": [],
                "required": true
              }
            ],
            "responses": [
              {
                "outputPayLoad": {
                  "array": false,
                  "type": "string"
                },
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              },
              {
                "outputPayLoad": null,
                "code": 400,
                "description": "Invalid username and password combination",
                "name": "Error 400"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/user/login"
      },
      {
        "description": null,
        "name": "UserLogout",
        "sections": [
          "User"
        ],
        "operations": [
          {
            "description": "Logs out current logged in user session",
            "headers": [],
            "inputPayLoad": null,
            "method": "GET",
            "name": "logoutUser",
            "queryParameters": [],
            "responses": [
              {
                "outputPayLoad": null,
                "code": 200,
                "description": "The request has succeeded",
                "name": "Success"
              }
            ],
            "produces": [
              "application/json"
            ],
            "consumes": []
          }
        ],
        "pathVariables": [],
        "resourcePath": "/user/logout"
      }
    ],
    "sections": [
      {
        "name": "Pet",
        "description": "Operations about pets"
      },
      {
        "name": "User",
        "description": "Operations about users"
      },
      {
        "name": "Order",
        "description": "Operations about orders"
      }
    ]
  },
  "endpoints": [
    {
      "domain": "petstore.swagger.wordnik.com",
      "port": null,
      "protocol": "http",
      "basePath": "/api",
      "authenticationProtocol": "HTTP_BASIC"
    }
  ],
  "license": {
    "name": "LICENSE-2.0",
    "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
  },
  "version": "1.0.0"
}