package org.restlet.test.batch.crud;

import org.restlet.ext.odata.Query;
import org.restlet.ext.odata.Service;
import org.restlet.ext.odata.batch.request.BatchRequest;
import org.restlet.ext.odata.batch.request.impl.BatchRequestImpl;
import org.restlet.ext.odata.batch.request.impl.CreateEntityRequest;
import org.restlet.test.ext.odata.crud.Cafe;

/**
 * Generated by the generator tool for the RestletBatch service extension for
 * the Restlet framework.<br>
 * 
 * @see <a href="http://localhost:8111/Cafe.svc/$metadata">Metadata of the
 *      target RestletBatch service</a>
 * 
 * 
 */
public class CafeService extends Service {

	/**
	 * Constructor.
	 * 
	 */
	public CafeService() {
		super("http://localhost:8111/Cafe.svc/");
	}

	/**
	 * Adds a new entity to the service.
	 * 
	 * @param entity
	 *            The entity to add to the service.
	 * @return the creates the entity request
	 * @throws Exception
	 *             the exception
	 */
	public CreateEntityRequest addEntity(Cafe entity) throws Exception {
		return addEntity("/Cafes", entity);
	}

	/**
	 * Creates a query for cafe entities hosted by this service.
	 * 
	 * @param subpath
	 *            The path to this entity relatively to the service URI.
	 * @return A query object.
	 */
	public Query<Cafe> createCafeQuery(String subpath) {
		return createQuery(subpath, Cafe.class);
	}

	/**
	 * Updates a query for cafe entities hosted by this service.
	 * 
	 * @param subpath
	 *            The path to this entity relatively to the service URI.
	 * @return A query object.
	 */

	public Query<Cafe> updateCafeQuery(String subpath) {
		return createQuery(subpath, Cafe.class);
	}

	/**
	 * Deletes a query for cafe entities hosted by this service.
	 * 
	 * @param subpath
	 *            The path to this entity relatively to the service URI.
	 * @return A query object.
	 */

	public Query<Cafe> deleteCafeQuery(String subpath) {
		return createQuery(subpath, Cafe.class);
	}

	/**
	 * Gets a query for cafe entities hosted by this service.
	 * 
	 * @param subpath
	 *            The path to this entity relatively to the service URI.
	 * @return A query object.
	 */

	public Query<Cafe> getCafeQuery(String subpath) {
		return createQuery(subpath, Cafe.class);
	}

	/**
	 * Method to perform batch operations. It maintains the list of
	 * clientBatchRequests within a batch.
	 * 
	 * @return list of request in batch.
	 */
	public BatchRequest createBatchRequest() {
		return new BatchRequestImpl(this);
	}
}
