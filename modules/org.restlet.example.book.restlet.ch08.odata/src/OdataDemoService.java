/**
 * Copyright 2005-2019 Talend
 * 
 * The contents of this file are subject to the terms of one of the following
 * open source licenses: Apache 2.0 or or EPL 1.0 (the "Licenses"). You can
 * select the license that you prefer but you may not use this file except in
 * compliance with one of these Licenses.
 * 
 * You can obtain a copy of the Apache 2.0 license at
 * http://www.opensource.org/licenses/apache-2.0
 * 
 * You can obtain a copy of the EPL 1.0 license at
 * http://www.opensource.org/licenses/eclipse-1.0
 * 
 * See the Licenses for the specific language governing permissions and
 * limitations under the Licenses.
 * 
 * Alternatively, you can obtain a royalty free commercial license with less
 * limitations, transferable or non-transferable, directly at
 * https://restlet.talend.com/
 * 
 * Restlet is a registered trademark of Talend S.A.
 */

import org.restlet.ext.odata.Query;

/**
* Generated by the generator tool for the OData extension for the Restlet framework.<br>
*
* @see <a href="http://services.odata.org/OData/OData.svc/$metadata">Metadata of the target OData service</a>
*
*/
public class OdataDemoService extends org.restlet.ext.odata.Service {

    /**
     * Constructor.
     * 
     */
    public OdataDemoService() {
        super("http://services.odata.org/OData/OData.svc/");
    }

    /**
     * Adds a new entity to the service.
     * 
     * @param entity
     *            The entity to add to the service.
     * @throws Exception 
     */
    public void addEntity(odatademo.Product entity) throws Exception {
        addEntity("/Products", entity);
    }

    /**
     * Creates a query for product entities hosted by this service.
     * 
     * @param subpath
     *            The path to this entity relatively to the service URI.
     * @return A query object.
     */
    public Query<odatademo.Product> createProductQuery(String subpath) {
        return createQuery(subpath, odatademo.Product.class);
    }


    /**
     * Adds a new entity to the service.
     * 
     * @param entity
     *            The entity to add to the service.
     * @throws Exception 
     */
    public void addEntity(odatademo.Category entity) throws Exception {
        addEntity("/Categories", entity);
    }

    /**
     * Creates a query for category entities hosted by this service.
     * 
     * @param subpath
     *            The path to this entity relatively to the service URI.
     * @return A query object.
     */
    public Query<odatademo.Category> createCategoryQuery(String subpath) {
        return createQuery(subpath, odatademo.Category.class);
    }


    /**
     * Adds a new entity to the service.
     * 
     * @param entity
     *            The entity to add to the service.
     * @throws Exception 
     */
    public void addEntity(odatademo.Supplier entity) throws Exception {
        addEntity("/Suppliers", entity);
    }

    /**
     * Creates a query for supplier entities hosted by this service.
     * 
     * @param subpath
     *            The path to this entity relatively to the service URI.
     * @return A query object.
     */
    public Query<odatademo.Supplier> createSupplierQuery(String subpath) {
        return createQuery(subpath, odatademo.Supplier.class);
    }


}
